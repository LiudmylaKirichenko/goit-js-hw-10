{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputTimer = document.getElementById('datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\n\nconst daysElem = document.querySelector('[data-days]');\nconst hoursElem = document.querySelector('[data-hours]');\nconst minutesElem = document.querySelector('[data-minutes]');\nconst secondsElem = document.querySelector('[ data-seconds]');\n\nbtnStart.disabled = true;\n\nlet userSelectDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n      userSelectDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(inputTimer, options);\n\nbtnStart.addEventListener('click', () => {\n  if (!userSelectDate) return;\n\n  btnStart.disabled = true;\n  inputTimer.disabled = true;\n\n  let countdownInterval = setInterval(() => {\n    const now = new Date();\n    const ms = userSelectDate - now;\n\n    if (ms <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer(0);\n      inputTimer.disabled = false;\n      return;\n    }\n\n    updateTimer(ms);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysElem.textContent = days;\n  hoursElem.textContent = addLeadingZero(hours);\n  minutesElem.textContent = addLeadingZero(minutes);\n  secondsElem.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputTimer","btnStart","daysElem","hoursElem","minutesElem","secondsElem","userSelectDate","options","selectedDates","selectedDate","iziToast","flatpickr","countdownInterval","ms","updateTimer","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAEhDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,iBAAiB,EAE5DJ,EAAS,SAAW,GAEpB,IAAIK,EAAiB,KAErB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBK,EAAiBG,EAEpB,CACH,EAEAE,EAAUX,EAAYO,CAAO,EAE7BN,EAAS,iBAAiB,QAAS,IAAM,CACvC,GAAI,CAACK,EAAgB,OAErBL,EAAS,SAAW,GACpBD,EAAW,SAAW,GAEtB,IAAIY,EAAoB,YAAY,IAAM,CAExC,MAAMC,EAAKP,EADC,IAAI,KAGhB,GAAIO,GAAM,EAAG,CACX,cAAcD,CAAiB,EAC/BE,EAAY,CAAC,EACbd,EAAW,SAAW,GACtB,MACD,CAEDc,EAAYD,CAAE,CACf,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAYD,EAAI,CACvB,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAE,EACtDX,EAAS,YAAca,EACvBZ,EAAU,YAAciB,EAAeJ,CAAK,EAC5CZ,EAAY,YAAcgB,EAAeH,CAAO,EAChDZ,EAAY,YAAce,EAAeF,CAAO,CAClD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUN,EAAI,CAMrB,MAAME,EAAO,KAAK,MAAMF,EAAK,KAAG,EAC1BG,EAAQ,KAAK,MAAOH,EAAK,MAAO,IAAI,EACpCI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAQ,GAAM,EACjDK,EAAU,KAAK,MAASL,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}